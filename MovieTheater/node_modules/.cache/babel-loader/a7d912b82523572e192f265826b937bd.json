{"ast":null,"code":"import _slicedToArray from \"/Users/maymayliu/FRE-Training-080221/MovieTheater/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isHostComponent } from '@mui/core';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport ModalUnstyled, { modalUnstyledClasses } from '@mui/core/ModalUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const modalClasses = modalUnstyledClasses;\n\nconst extendUtilityClasses = ownerState => {\n  return ownerState.classes;\n};\n\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const ownerState = props.ownerState;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  zIndex: theme.zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && ownerState.exited && {\n  visibility: 'hidden'\n}));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _componentsProps$root;\n\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  const _props$BackdropCompon = props.BackdropComponent,\n        BackdropComponent = _props$BackdropCompon === void 0 ? ModalBackdrop : _props$BackdropCompon,\n        _props$closeAfterTran = props.closeAfterTransition,\n        closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n        children = props.children,\n        _props$components = props.components,\n        components = _props$components === void 0 ? {} : _props$components,\n        _props$componentsProp = props.componentsProps,\n        componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n        _props$disableAutoFoc = props.disableAutoFocus,\n        disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n        _props$disableEnforce = props.disableEnforceFocus,\n        disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n        _props$disableEscapeK = props.disableEscapeKeyDown,\n        disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n        _props$disablePortal = props.disablePortal,\n        disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n        _props$disableRestore = props.disableRestoreFocus,\n        disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n        _props$disableScrollL = props.disableScrollLock,\n        disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n        _props$hideBackdrop = props.hideBackdrop,\n        hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n        _props$keepMounted = props.keepMounted,\n        keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        exited = _React$useState2[0],\n        setExited = _React$useState2[1];\n\n  const commonProps = {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n\n  const ownerState = _extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ModalUnstyled, _extends({\n    components: _extends({\n      Root: ModalRoot\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        ownerState: _extends({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState)\n      })\n    },\n    BackdropComponent: BackdropComponent,\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true),\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["/Users/maymayliu/FRE-Training-080221/MovieTheater/node_modules/@mui/material/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isHostComponent","elementAcceptingRef","HTMLElementType","ModalUnstyled","modalUnstyledClasses","styled","useThemeProps","Backdrop","jsx","_jsx","modalClasses","extendUtilityClasses","ownerState","classes","ModalRoot","name","slot","overridesResolver","props","styles","root","open","exited","hidden","theme","position","zIndex","modal","right","bottom","top","left","visibility","ModalBackdrop","backdrop","Modal","forwardRef","inProps","ref","_componentsProps$root","BackdropComponent","closeAfterTransition","children","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","other","useState","setExited","commonProps","Root","onTransitionEnter","onTransitionExited","process","env","NODE_ENV","propTypes","elementType","BackdropProps","object","isRequired","bool","shape","container","oneOfType","func","onBackdropClick","onClose","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isHostComponent } from '@mui/core';\nimport { elementAcceptingRef, HTMLElementType } from '@mui/utils';\nimport ModalUnstyled, { modalUnstyledClasses } from '@mui/core/ModalUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const modalClasses = modalUnstyledClasses;\n\nconst extendUtilityClasses = ownerState => {\n  return ownerState.classes;\n};\n\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'fixed',\n  zIndex: theme.zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !ownerState.open && ownerState.exited && {\n  visibility: 'hidden'\n}));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _componentsProps$root;\n\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  const {\n    BackdropComponent = ModalBackdrop,\n    closeAfterTransition = false,\n    children,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const commonProps = {\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n\n  const ownerState = _extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ModalUnstyled, _extends({\n    components: _extends({\n      Root: ModalRoot\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        ownerState: _extends({}, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.ownerState)\n      })\n    },\n    BackdropComponent: BackdropComponent,\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true),\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}