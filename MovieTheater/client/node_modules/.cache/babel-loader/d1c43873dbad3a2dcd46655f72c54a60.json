{"ast":null,"code":"var _jsxFileName = \"/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Context from './Context';\nimport config from './config';\nimport MovieListNav from './components/MovieListNav/MovieListNav';\nimport MovieListMain from './components/MovieListMain/MovieListMain';\nimport MoviePageNav from './components/MoviePageNav/MoviePageNav';\nimport MoviePageMain from './components/MoviePageMain/MoviePageMain';\nimport LoginRoute from './components/Login/LoginRoute';\nimport AddGenre from './components/AddGenre/AddGenre';\nimport AddMovie from './components/AddMovie/AddMovie';\nimport Navbar from './components/Navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      genres: [{\n        \"1\": \"1\"\n      }, {\n        \"2\": \"2\"\n      }],\n      movies: [{\n        \"1\": \"1\"\n      }, {\n        \"2\": \"2\"\n      }]\n    };\n\n    this.handleAddGenre = genre => {\n      this.setState({\n        genres: [...this.state.genres, genre]\n      });\n    };\n\n    this.handleAddMovie = movie => {\n      this.setState({\n        movies: [...this.state.movies, movie]\n      });\n    };\n\n    this.handleDeleteMovie = movieId => {\n      this.setState({\n        movies: this.state.movies.filter(movie => movie.id !== movieId)\n      });\n    };\n\n    this.handleDeleteGenre = genreId => {\n      this.setState({\n        genres: this.state.genres.filter(genre => genre.id !== genreId)\n      });\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([fetch(`${config.API_ENDPOINT}/movies`), fetch(`${config.API_ENDPOINT}/genres`)]).then(([MoviesRes, GenreRes]) => {\n      if (!MoviesRes.ok) return MoviesRes.json().then(e => Promise.reject(e));\n      if (!GenreRes.ok) return GenreRes.json().then(e => Promise.reject(e));\n      return Promise.all([MoviesRes.json(), GenreRes.json()]);\n    }).then(([Movies, Genre]) => {\n      this.setState({\n        Movies,\n        Genre\n      });\n    }).catch(error => {\n      console.error({\n        error\n      });\n    });\n  }\n\n  renderNavRoutes() {\n    console.log(\"hello\");\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/genre/:genre_id\",\n        component: MovieListNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/',\n        component: MovieListNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:movieId\",\n        component: MoviePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-genre\",\n        component: MoviePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-movie\",\n        component: MoviePageNav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  renderMainRoutes() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Navbar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: '/login',\n        component: LoginRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/genre/:genre_id\",\n        component: MovieListMain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies/:movieId\",\n        component: MoviePageMain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-genre\",\n        component: AddGenre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-movie\",\n        component: AddMovie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  render() {\n    const value = {\n      genres: this.state.genres,\n      movies: this.state.movies,\n      addGenre: this.handleAddGenre,\n      addMovie: this.handleAddMovie,\n      deleteMovie: this.handleDeleteMovie,\n      deleteGenre: this.handleDeleteGenre\n    };\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: value,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Route\",\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"Route_nav\",\n          children: this.renderNavRoutes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"Route_header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Maymay's Movie Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"Route_main\",\n          children: this.renderMainRoutes()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/App.js"],"names":["React","Component","Route","Link","Context","config","MovieListNav","MovieListMain","MoviePageNav","MoviePageMain","LoginRoute","AddGenre","AddMovie","Navbar","App","state","genres","movies","handleAddGenre","genre","setState","handleAddMovie","movie","handleDeleteMovie","movieId","filter","id","handleDeleteGenre","genreId","componentDidMount","Promise","all","fetch","API_ENDPOINT","then","MoviesRes","GenreRes","ok","json","e","reject","Movies","Genre","catch","error","console","renderNavRoutes","log","renderMainRoutes","render","value","addGenre","addMovie","deleteMovie","deleteGenre"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Context from './Context';\nimport config from './config';\nimport MovieListNav from './components/MovieListNav/MovieListNav';\nimport MovieListMain from './components/MovieListMain/MovieListMain';\nimport MoviePageNav from './components/MoviePageNav/MoviePageNav';\nimport MoviePageMain from './components/MoviePageMain/MoviePageMain';\nimport LoginRoute from './components/Login/LoginRoute';\nimport AddGenre from './components/AddGenre/AddGenre';\nimport AddMovie from './components/AddMovie/AddMovie';\nimport Navbar from './components/Navbar/Navbar';\n\nclass App extends Component {\n  state = {\n    genres: [\n      {\"1\": \"1\"},\n      {\"2\": \"2\"}\n    ],\n    movies: [{\"1\": \"1\"},\n    {\"2\": \"2\"}],\n  }\n\n  componentDidMount() {\n    Promise.all([\n        fetch(`${config.API_ENDPOINT}/movies`),\n        fetch(`${config.API_ENDPOINT}/genres`)\n    ])\n        .then(([MoviesRes, GenreRes]) => {\n            if (!MoviesRes.ok)\n                return MoviesRes.json().then(e => Promise.reject(e));\n            if (!GenreRes.ok)\n                return GenreRes.json().then(e => Promise.reject(e));\n\n            return Promise.all([MoviesRes.json(), GenreRes.json()]);\n        })\n        .then(([Movies, Genre]) => {\n            this.setState({Movies, Genre});\n        })\n        .catch(error => {\n            console.error({error});\n        });\n}\n\n  handleAddGenre = genre => {\n    this.setState({\n      genres: [...this.state.genres, genre]\n    }\n  )}\n\n  handleAddMovie = movie => {\n    this.setState({\n      movies: [...this.state.movies, movie]\n    })\n  }\n\n  handleDeleteMovie = movieId => {\n    this.setState({\n      movies: this.state.movies.filter(movie => movie.id !== movieId)\n    })\n  }\n\n  handleDeleteGenre = genreId => {\n    this.setState({\n      genres: this.state.genres.filter(genre => genre.id !== genreId)\n    })\n  }\n\n  renderNavRoutes() {\n    console.log(\"hello\")\n    return (\n      <>\n          <Route\n              path={\"/genre/:genre_id\"}\n              component={MovieListNav}\n          />\n          <Route\n              path={'/'}\n              component={MovieListNav}\n          />\n\n        <Route path='/movies/:movieId' component={MoviePageNav}\n        />\n        <Route path='/add-genre' component={MoviePageNav} />\n        <Route path='/add-movie' component={MoviePageNav} />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        <Route exact path=\"/\" component={Navbar} />\n        <Route path={'/login'} component={LoginRoute} />\n        \n        <Route\n            exact\n            path=\"/genre/:genre_id\"\n            component={MovieListMain}\n          />\n        \n        <Route path=\"/movies/:movieId\" component={MoviePageMain} />\n        <Route path='/add-genre' component={AddGenre} />\n        <Route path='/add-movie' component={AddMovie} />\n\n      </>\n    );\n  }\n\n  render() {\n    const value = {\n      genres: this.state.genres,\n      movies: this.state.movies,\n      addGenre: this.handleAddGenre,\n      addMovie: this.handleAddMovie,\n      deleteMovie: this.handleDeleteMovie,\n      deleteGenre: this.handleDeleteGenre\n    };\n\n    return (\n      <Context.Provider value={value}>\n        <div className=\"Route\">\n          <nav className=\"Route_nav\">\n              {this.renderNavRoutes()}\n          </nav>\n\n          <header className=\"Route_header\">\n            <h1>\n              <Link to=\"/\"> Maymay's Movie Page</Link>\n            </h1>\n          </header>\n\n          <main className=\"Route_main\">\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </Context.Provider>\n    )\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}