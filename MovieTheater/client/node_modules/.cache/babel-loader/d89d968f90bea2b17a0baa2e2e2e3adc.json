{"ast":null,"code":"import { addGenresToStore, addMoviesToStore, updateMoviesToStore } from './reducerFunctions'; // INITIAL STATES\n\nconst INIT_STATE = {\n  genres: [],\n  movies: []\n}; // ACTIONS\n\nconst GET_GENRES = 'GET_GENRES';\nconst GET_MOVIES = 'GET_MOVIES';\nconst ADD_GENRES = 'ADD_GENRES';\nconst ADD_MOVIES = 'ADD_MOVIES';\nconst UPDATE_MOVIES = 'UPDATE_MOVIES';\nconst DELETE_GENRES = 'DELETE_GENRES';\nconst DELETE_MOVIES = 'DELETE_MOVIES'; // ACTION CREATORS\n\nexport const gotGenres = genres => {\n  return {\n    type: GET_GENRES,\n    genres\n  };\n};\nexport const gotMovies = movies => {\n  return {\n    type: GET_MOVIES,\n    movies\n  };\n};\nexport const addGenres = newGenres => {\n  return {\n    type: ADD_GENRES,\n    payload: newGenres\n  };\n};\nexport const addMovies = (genres_id, newMovies) => {\n  return {\n    type: ADD_MOVIES,\n    payload: {\n      genres_id,\n      newMovies\n    }\n  };\n};\nexport const updateMovies = (genres_id, newMovies) => {\n  return {\n    type: UPDATE_MOVIES,\n    payload: {\n      genres_id,\n      newMovies\n    }\n  };\n};\nexport const deleteGenres = id => {\n  return {\n    type: DELETE_GENRES,\n    payload: id\n  };\n};\nexport const deleteMovies = id => {\n  return {\n    type: DELETE_MOVIES,\n    payload: id\n  };\n}; // REDUCER\n\nconst reducer = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_GENRES:\n      return action.genres;\n\n    case GET_MOVIES:\n      return action.movies;\n\n    case ADD_GENRES:\n      return addGenresToStore(state, action.payload.newGenres);\n\n    case ADD_MOVIES:\n      return addMoviesToStore(state, action.payload.genres_id, action.payload.newMovies);\n\n    case UPDATE_MOVIES:\n      return updateMoviesToStore(state, action.payload.genres_id, action.payload.newMovies);\n\n    case DELETE_GENRES:\n      return { ...state,\n        genres: state.genres.filter((genre, id) => id !== action.payload)\n      };\n\n    case DELETE_MOVIES:\n      return { ...state,\n        movies: state.movies.filter((movie, id) => id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/store/store.js"],"names":["addGenresToStore","addMoviesToStore","updateMoviesToStore","INIT_STATE","genres","movies","GET_GENRES","GET_MOVIES","ADD_GENRES","ADD_MOVIES","UPDATE_MOVIES","DELETE_GENRES","DELETE_MOVIES","gotGenres","type","gotMovies","addGenres","newGenres","payload","addMovies","genres_id","newMovies","updateMovies","deleteGenres","id","deleteMovies","reducer","state","action","filter","genre","movie"],"mappings":"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","sourcesContent":["import {\n    addGenresToStore,\n    addMoviesToStore,\n    updateMoviesToStore,\n} from './reducerFunctions';\n\n// INITIAL STATES\nconst INIT_STATE = {\n    genres: [],\n    movies: [],\n}\n\n// ACTIONS\nconst GET_GENRES = 'GET_GENRES';\nconst GET_MOVIES = 'GET_MOVIES';\nconst ADD_GENRES = 'ADD_GENRES';\nconst ADD_MOVIES = 'ADD_MOVIES';\nconst UPDATE_MOVIES = 'UPDATE_MOVIES';\nconst DELETE_GENRES = 'DELETE_GENRES';\nconst DELETE_MOVIES = 'DELETE_MOVIES';\n\n// ACTION CREATORS\nexport const gotGenres = (genres) => {\n    return {\n        type: GET_GENRES,\n        genres\n    };\n};\n\nexport const gotMovies = (movies) => {\n    return {\n        type: GET_MOVIES,\n        movies\n    };\n};\n\nexport const addGenres = (newGenres) => {\n    return {\n        type: ADD_GENRES,\n        payload: newGenres\n    };\n};\n\nexport const addMovies = (genres_id, newMovies) => {\n    return {\n        type: ADD_MOVIES,\n        payload: { genres_id, newMovies }\n    };\n};\n\nexport const updateMovies = (genres_id, newMovies) => {\n    return {\n        type: UPDATE_MOVIES,\n        payload: { genres_id, newMovies }\n    };\n};\n\nexport const deleteGenres = (id) => {\n    return {\n        type: DELETE_GENRES,\n        payload: id\n    };\n};\n\nexport const deleteMovies = (id) => {\n    return {\n        type: DELETE_MOVIES,\n        payload: id\n    };\n};\n\n\n// REDUCER\nconst reducer = (state=INIT_STATE, action) => {\n    switch (action.type) {\n        case GET_GENRES:\n            return action.genres;\n        case GET_MOVIES:\n            return action.movies;\n        case ADD_GENRES:\n            return addGenresToStore (state, action.payload.newGenres);\n        case ADD_MOVIES:\n            return addMoviesToStore (\n                state, \n                action.payload.genres_id, \n                action.payload.newMovies\n            );\n        case UPDATE_MOVIES:\n            return updateMoviesToStore(\n                state, \n                action.payload.genres_id, \n                action.payload.newMovies\n            );\n        case DELETE_GENRES:\n            return {\n                ...state,\n                genres: state.genres.filter((genre, id) => id !== action.payload)\n            }\n        case DELETE_MOVIES:\n            return {\n                ...state,\n                movies: state.movies.filter((movie, id) => id !== action.payload)\n            }\n        default:\n            return state\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}