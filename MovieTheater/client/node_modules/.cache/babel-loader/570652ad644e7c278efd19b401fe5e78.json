{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport config from '../config';\n\nlet _timeoutId;\n\nconst _TEN_SECONDS_IN_MS = 10000;\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token);\n  },\n\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY);\n  },\n\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY);\n  },\n\n  hasAuthToken() {\n    return !!TokenService.getAuthToken();\n  },\n\n  parseJwt(jwt) {\n    return jwtDecode(jwt);\n  },\n\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken();\n    if (authToken) return TokenService.parseJwt(authToken);else return undefined;\n  },\n\n  _getMsUntilExpiry(payload) {\n    return payload.exp * 1000 - Date.now();\n  },\n\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(TokenService.parseAuthToken());\n\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS);\n  },\n\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId);\n  }\n\n};\nexport default TokenService;","map":{"version":3,"sources":["/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/services/token-service.js"],"names":["jwtDecode","config","_timeoutId","_TEN_SECONDS_IN_MS","TokenService","saveAuthToken","token","window","localStorage","setItem","TOKEN_KEY","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","parseJwt","jwt","parseAuthToken","authToken","undefined","_getMsUntilExpiry","payload","exp","Date","now","queueCallbackBeforeExpiry","callback","msUntilExpiry","setTimeout","clearCallbackBeforeExpiry","clearTimeout"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAIC,UAAJ;;AACA,MAAMC,kBAAkB,GAAG,KAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,MAAM,CAACS,SAAnC,EAA8CJ,KAA9C;AACD,GAHkB;;AAInBK,EAAAA,YAAY,GAAG;AACb,WAAOJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BX,MAAM,CAACS,SAAnC,CAAP;AACD,GANkB;;AAOnBG,EAAAA,cAAc,GAAG;AACfN,IAAAA,MAAM,CAACC,YAAP,CAAoBM,UAApB,CAA+Bb,MAAM,CAACS,SAAtC;AACD,GATkB;;AAUnBK,EAAAA,YAAY,GAAG;AACb,WAAO,CAAC,CAACX,YAAY,CAACO,YAAb,EAAT;AACD,GAZkB;;AAanBK,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACZ,WAAOjB,SAAS,CAACiB,GAAD,CAAhB;AACD,GAfkB;;AAgBnBC,EAAAA,cAAc,GAAG;AACf,UAAMC,SAAS,GAAGf,YAAY,CAACO,YAAb,EAAlB;AACA,QAAIQ,SAAJ,EACE,OAAOf,YAAY,CAACY,QAAb,CAAsBG,SAAtB,CAAP,CADF,KAGE,OAAOC,SAAP;AACH,GAtBkB;;AAuBnBC,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACzB,WAAQA,OAAO,CAACC,GAAR,GAAc,IAAf,GAAuBC,IAAI,CAACC,GAAL,EAA9B;AACD,GAzBkB;;AA0BnBC,EAAAA,yBAAyB,CAACC,QAAD,EAAW;AAClC,UAAMC,aAAa,GAAGxB,YAAY,CAACiB,iBAAb,CACpBjB,YAAY,CAACc,cAAb,EADoB,CAAtB;;AAGAhB,IAAAA,UAAU,GAAG2B,UAAU,CAACF,QAAD,EAAWC,aAAa,GAAGzB,kBAA3B,CAAvB;AACD,GA/BkB;;AAgCnB2B,EAAAA,yBAAyB,GAAG;AAC1BC,IAAAA,YAAY,CAAC7B,UAAD,CAAZ;AACD;;AAlCkB,CAArB;AAqCA,eAAeE,YAAf","sourcesContent":["import jwtDecode from 'jwt-decode'\nimport config from '../config'\n\nlet _timeoutId\nconst _TEN_SECONDS_IN_MS = 10000\n\nconst TokenService = {\n  saveAuthToken(token) {\n    window.localStorage.setItem(config.TOKEN_KEY, token)\n  },\n  getAuthToken() {\n    return window.localStorage.getItem(config.TOKEN_KEY)\n  },\n  clearAuthToken() {\n    window.localStorage.removeItem(config.TOKEN_KEY)\n  },\n  hasAuthToken() {\n    return !!TokenService.getAuthToken()\n  },\n  parseJwt(jwt) {\n    return jwtDecode(jwt)\n  },\n  parseAuthToken() {\n    const authToken = TokenService.getAuthToken()\n    if (authToken)\n      return TokenService.parseJwt(authToken)\n    else\n      return undefined\n  },\n  _getMsUntilExpiry(payload) {\n    return (payload.exp * 1000) - Date.now()\n  },\n  queueCallbackBeforeExpiry(callback) {\n    const msUntilExpiry = TokenService._getMsUntilExpiry(\n      TokenService.parseAuthToken()\n    )\n    _timeoutId = setTimeout(callback, msUntilExpiry - _TEN_SECONDS_IN_MS)\n  },\n  clearCallbackBeforeExpiry() {\n    clearTimeout(_timeoutId)\n  },\n}\n\nexport default TokenService\n"]},"metadata":{},"sourceType":"module"}