{"ast":null,"code":"var _jsxFileName = \"/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/components/AddMovie/AddMovie.js\";\nimport React, { Component } from 'react';\nimport Context from \"../../Context\";\nimport config from \"../../config\";\nimport TokenService from \"../../services/token-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmitMovie = event => {\n      event.preventDefault();\n      const movieName = this.state.movieName;\n      const price = this.state.price;\n      const content = this.state.content;\n      const genre_id = event.currentTarget.querySelector(\"select\").value;\n      fetch(`${config.API_ENDPOINT}/admin/movies`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'authorization': `bearer ${TokenService.getAuthToken()}`\n        },\n        body: JSON.stringify({\n          'movies_name': movieName.value,\n          'movies_price': price.value,\n          'content': content.value,\n          'genre_id': genre_id\n        })\n      }).then(res => res.json()).then(data => {\n        this.context.addMovie(data);\n        this.props.history.push(\"/\");\n      }).catch(error => console.log(error));\n    };\n\n    this.genreOption = () => {\n      const {\n        genres\n      } = this.context;\n      return genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n        id: \"genre_name\",\n        name: genre.id,\n        value: genre.id,\n        children: genre.genre_name\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this));\n    };\n\n    this.state = {\n      movieName: {\n        value: ' ',\n        touched: false\n      },\n      price: {\n        value: ' ',\n        touched: false\n      },\n      content: {\n        value: ' ',\n        touched: false\n      }\n    };\n  }\n\n  updateName(movieName) {\n    this.setState({\n      MovieName: {\n        value: movieName,\n        touched: true\n      }\n    });\n  }\n\n  updatePrice(price) {\n    this.setState({\n      price: {\n        value: price,\n        touched: true\n      }\n    });\n  }\n\n  updateContent(content) {\n    this.setState({\n      content: {\n        value: content,\n        touched: true\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add A New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.handleSubmitMovie(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"movie_name\",\n          children: [\"Movie Name: \", this.state.movieName.touched, /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"movie_name\",\n            type: \"text\",\n            onChange: e => this.updateName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"price\",\n          children: [\"Price: \", this.state.price.touched, /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            onChange: e => this.updatePrice(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"content\",\n          children: [\"\\u5185\\u5BB9: \", this.state.content.touched, /*#__PURE__*/_jsxDEV(\"textarea\", {\n            cols: \"60\",\n            rows: \"10\",\n            id: \"content\",\n            type: \"text\",\n            onChange: e => this.updateContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Select its genre:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            for: \"genre_name\",\n            children: this.genreOption()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\u786E\\u8BA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAddMovie.contextType = Context;\n;\nexport default AddMovie;","map":{"version":3,"sources":["/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/components/AddMovie/AddMovie.js"],"names":["React","Component","Context","config","TokenService","AddMovie","constructor","props","handleSubmitMovie","event","preventDefault","movieName","state","price","content","genre_id","currentTarget","querySelector","value","fetch","API_ENDPOINT","method","headers","getAuthToken","body","JSON","stringify","then","res","json","data","context","addMovie","history","push","catch","error","console","log","genreOption","genres","map","genre","id","genre_name","touched","updateName","setState","MovieName","updatePrice","updateContent","render","e","target","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Context from \"../../Context\"\nimport config from \"../../config\"\nimport TokenService from \"../../services/token-service\"\n\nclass AddMovie extends Component {\n    static contextType = Context;\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            movieName: {\n                value: ' ',\n                touched: false,\n            },\n            price: {\n                value: ' ',\n                touched: false,\n            },\n            content: {\n                value: ' ',\n                touched: false,\n            }\n        }\n    };\n\n    updateName(movieName) {\n        this.setState({\n            MovieName: {\n                value: movieName,\n                touched: true,\n            }\n        })\n    };\n\n    updatePrice(price) {\n        this.setState({\n            price: {\n                value: price,\n                touched: true,\n            }\n        })\n    };\n\n    updateContent(content) {\n        this.setState({\n            content: {\n                value: content,\n                touched: true,\n            }\n        })\n    };\n\n\n    handleSubmitMovie = (event) => {\n        event.preventDefault();\n        const movieName = this.state.movieName;\n        const price = this.state.price;\n        const content = this.state.content;\n        const genre_id = event.currentTarget.querySelector(\"select\").value;\n\n        fetch(`${config.API_ENDPOINT}/admin/movies`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n                'authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify({\n                'movies_name': movieName.value,\n                'movies_price': price.value,\n                'content': content.value,\n                'genre_id': genre_id,\n            })\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                this.context.addMovie(data);\n                this.props.history.push(\"/\");\n            })\n            .catch((error) => console.log(error));\n    };\n\n    genreOption = () => {\n        const { genres } = this.context;\n        return genres.map((genre) =>\n            <option id=\"genre_name\" key={genre.id} name={genre.id} value={genre.id}>\n                {genre.genre_name}\n            </option>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Add A New Movie</h2>\n\n                <form onSubmit={e => this.handleSubmitMovie(e)}>\n                    <label for=\"movie_name\">\n                        Movie Name: {this.state.movieName.touched}\n\n                        <input id=\"movie_name\" type=\"text\" onChange={(e) => this.updateName(e.target.value)} required />\n                    </label>\n                    <br></br>\n\n                    <label for=\"price\">\n                        Price: {this.state.price.touched}\n\n                        <input id=\"price\" type=\"text\" onChange={(e) => this.updatePrice(e.target.value)} required />\n                    </label>\n                    <br></br>\n\n                    <label for=\"content\">\n                        内容: {this.state.content.touched}\n\n                        <textarea cols=\"60\" rows=\"10\" id=\"content\" type=\"text\" onChange={(e) => this.updateContent(e.target.value)}></textarea>\n                    </label>\n                    <br></br>\n\n                    <p>Select its genre: \n                    <select for=\"genre_name\">{this.genreOption()}</select>\n                    </p>\n                    <br></br>\n\n                    <button type=\"submit\">确认</button>\n\n                </form>\n            </div>\n        )\n    };\n};\n\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}