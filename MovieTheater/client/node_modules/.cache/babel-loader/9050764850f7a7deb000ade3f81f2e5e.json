{"ast":null,"code":"import config from '../config';\nimport TokenService from './token-service';\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/user`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json());\n  },\n\n  postLogin({\n    username,\n    password\n  }) {\n    return fetch(`${config.API_ENDPOINT}/auth`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => !res.ok ? res.json().then(err => Promise.reject(err)) : res.json());\n  },\n\n  refreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth`, {\n      method: 'PUT',\n      headers: {\n        'authorization': `Bearer ${TokenService.getAuthToken()}`\n      }\n    }).then(res => !res.ok ? res.json().then(e => Promise.reject(e)) : res.json());\n  }\n\n};\nexport default AuthApiService;","map":{"version":3,"sources":["/Users/maymayliu/antraReact/FRE-Training-080221/MovieTheater/client/src/services/auth-api-service.js"],"names":["config","TokenService","AuthApiService","postUser","user","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","postLogin","username","password","err","refreshToken","getAuthToken"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,WAAOC,KAAK,CAAE,GAAEL,MAAM,CAACM,YAAa,OAAxB,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALoC,KAAhC,CAAL,CAOJQ,IAPI,CAOCC,GAAG,IACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EAVD,CAAP;AAYD,GAdoB;;AAerBI,EAAAA,SAAS,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAAyB;AAChC,WAAOhB,KAAK,CAAE,GAAEL,MAAM,CAACM,YAAa,OAAxB,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAES,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAf;AALoC,KAAhC,CAAL,CAOJT,IAPI,CAOCC,GAAG,IACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBU,GAAG,IAAIL,OAAO,CAACC,MAAR,CAAeI,GAAf,CAAvB,CADJ,GAEIT,GAAG,CAACE,IAAJ,EAVD,CAAP;AAYD,GA5BoB;;AA6BrBQ,EAAAA,YAAY,GAAG;AACb,WAAOlB,KAAK,CAAE,GAAEL,MAAM,CAACM,YAAa,OAAxB,EAAgC;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,yBAAkB,UAASP,YAAY,CAACuB,YAAb,EAA4B;AADhD;AAFiC,KAAhC,CAAL,CAMJZ,IANI,CAMCC,GAAG,IACN,CAACA,GAAG,CAACC,EAAN,GACID,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgBI,CAAC,IAAIC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAArB,CADJ,GAEIH,GAAG,CAACE,IAAJ,EATD,CAAP;AAWD;;AAzCoB,CAAvB;AA4CA,eAAeb,cAAf","sourcesContent":["import config from '../config'\nimport TokenService from './token-service'\n\nconst AuthApiService = {\n  postUser(user) {\n    return fetch(`${config.API_ENDPOINT}/user`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n  postLogin({ username, password }) {\n    return fetch(`${config.API_ENDPOINT}/auth`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(err => Promise.reject(err))\n          : res.json()\n      )\n  },\n  refreshToken() {\n    return fetch(`${config.API_ENDPOINT}/auth`, {\n      method: 'PUT',\n      headers: {\n        'authorization': `Bearer ${TokenService.getAuthToken()}`,\n      },\n    })\n      .then(res =>\n        (!res.ok)\n          ? res.json().then(e => Promise.reject(e))\n          : res.json()\n      )\n  },\n}\n\nexport default AuthApiService\n"]},"metadata":{},"sourceType":"module"}